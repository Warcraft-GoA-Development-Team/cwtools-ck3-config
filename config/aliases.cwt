# Single aliases

single_alias[trigger_clause] = {
    alias_name[trigger] = alias_match_left[trigger]
}

single_alias[effect_clause] = {
    alias_name[effect] = alias_match_left[effect]
}

single_alias[cost] = {
    ## cardinality = 0..1
    gold = single_alias_right[score_formula]
    ## cardinality = 0..1
    gold = alias_keys_field[int_value]
    ## cardinality = 0..1
    gold = value_field

    ## cardinality = 0..1
    piety = single_alias_right[score_formula]
    ## cardinality = 0..1
    piety = alias_keys_field[int_value]
    ## cardinality = 0..1
    piety = value_field

    ## cardinality = 0..1
    prestige = single_alias_right[score_formula]
    ## cardinality = 0..1
    prestige = alias_keys_field[int_value]
    ## cardinality = 0..1
    prestige = value_field

    ## cardinality = 0..1
    renown = single_alias_right[score_formula]
    ## cardinality = 0..1
    renown = alias_keys_field[int_value]
    ## cardinality = 0..1
    renown = value_field

    ## cardinality = 0..1
    influence = single_alias_right[score_formula]
    ## cardinality = 0..1
    influence = alias_keys_field[int_value]
    ## cardinality = 0..1
    influence = value_field

    ## cardinality = 0..1
    herd = single_alias_right[score_formula]
    ## cardinality = 0..1
    herd = alias_keys_field[int_value]
    ## cardinality = 0..1
    herd = value_field

    ## cardinality = 0..1
    round = bool
}

single_alias[character_modifier] = {
    ## push_scope = character
    alias_name[modifier] = alias_match_left[modifier]
}

single_alias[modifier_list] = {
    ## cardinality = 1..inf
    alias_name[modifier] = alias_match_left[modifier]
}

single_alias[weighted_localisation_list] = {
    ## cardinality = 1..inf
    int = single_alias_right[localisation_list]
}

single_alias[localisation_list] = {
    ## cardinality = 1..inf
    localisation
}

single_alias[doctrine_character_modifier] = {
    doctrine = <doctrine>
    ## cardinality = 0..1
    name = localisation
    ## push_scope = character
    alias_name[modifier] = alias_match_left[modifier]
}

single_alias[complex_desc] = {
    ## cardinality = 0..inf
    desc = localisation
    ## cardinality = 0..inf
    desc = single_alias_right[complex_desc]
    ## cardinality = 0..inf
    triggered_desc = single_alias_right[triggered_desc]

    ## cardinality = 0..inf
    first_valid = single_alias_right[first_random_valid]

    ## cardinality = 0..inf
    random_valid = single_alias_right[first_random_valid]
}

single_alias[first_random_valid] = {
    ## cardinality = 0..inf
    triggered_desc = single_alias_right[triggered_desc]
    ## cardinality = 0..inf
    random_valid = single_alias_right[first_random_valid]
    # This should probably be recursive, but referencing an alias in itself causes a parser crash.
    ## cardinality = 0..inf
    desc = localisation
    ## cardinality = 0..inf
    desc = single_alias_right[complex_desc]
}

single_alias[triggered_desc] = {
    desc = localisation
    desc = single_alias_right[complex_desc]
    # We can omit the trigger. Common as the 'else' block in a first_valid block.
    ## cardinality = 0..inf
    trigger = {
        ## cardinality = 1..inf
        alias_name[trigger] = alias_match_left[trigger]
    }
}

single_alias[scaled_modifier] = {
    ## cardinality = 0..1
    scale = int_value_field
    ## cardinality = 0..1
    scale = alias_keys_field[int_value]
    ## cardinality = 0..1
    scale = single_alias_right[score_formula]
    ## push_scope = character
    alias_name[modifier] = alias_match_left[modifier]
}

single_alias[scaled_modifier_name] = {
    ## cardinality = 0..1
    name = localisation
    ## cardinality = 0..1
    scale = int_value_field
    ## cardinality = 0..1
    scale = alias_keys_field[int_value]
    ## cardinality = 0..1
    scale = single_alias_right[score_formula]
    ## push_scope = character
    alias_name[modifier] = alias_match_left[modifier]
}

single_alias[relation_flag_clause] = {
    ### Flag to interact with.
	flag = value[relation_flag]
    ### Target to interact with.
	target = scope[character]
    ### Relation to interact with.
	relation = <scripted_relation>
}

single_alias[regular_building_list] = {
    ## cardinality = 1..inf
    <building.regular>
}

single_alias[building_list] = {
    ## cardinality = 1..inf
    <building>
}

single_alias[title_list] = {
    ## cardinality = 1..inf
    <landed_title>
}

single_alias[added_modifier] = {
    modifier = <modifier_container>
    ## cardinality = 0..1
    enum[duration] = int_value_field
    ## cardinality = 0..1
    enum[duration] = alias_keys_field[int_value]
    ## cardinality = 0..1
    desc = localisation
}

single_alias[title_change] = {
    holder = scope[character]
    change = scope[title_and_vassal_change]
    ## cardinality = 0..1
    take_baronies = bool
}

single_alias[random_traits_list] = {
    ## cardinality = 0..1
    count = int
    ## cardinality = 0..1
    count = { int int }
    ## cardinality = 0..inf
    <trait> = {
        ## cardinality = 0..1
        weight = single_alias_right[weight_block]
        ## cardinality = 0..inf
        alias_name[trigger] = alias_match_left[trigger]
    }
    ##cardinality = 0..inf
    <trait> = {}
}

single_alias[character_culture_modifier] = {
    parameter = enum[cultural_parameter]
    ## push_scope = character
    ## cardinality = 1..inf
    alias_name[modifier] = alias_match_left[modifier]
}

single_alias[province_culture_modifier] = {
    parameter = enum[cultural_parameter]
    ## push_scope = province
    ## cardinality = 1..inf
    alias_name[modifier] = alias_match_left[modifier]
}

single_alias[county_culture_modifier] = {
    parameter = enum[cultural_parameter]
    ## push_scope = landed_title
    ## cardinality = 1..inf
    alias_name[modifier] = alias_match_left[modifier]
}

single_alias[character_faith_modifier] = {
    parameter = enum[doctrine_param]
    ## push_scope = character
    ## cardinality = 1..inf
    alias_name[modifier] = alias_match_left[modifier]
}

single_alias[province_faith_modifier] = {
    parameter = enum[doctrine_param]
    ## push_scope = province
    ## cardinality = 1..inf
    alias_name[modifier] = alias_match_left[modifier]
}

single_alias[county_faith_modifier] = {
    parameter = enum[doctrine_param]
    ## push_scope = landed_title
    ## cardinality = 1..inf
    alias_name[modifier] = alias_match_left[modifier]
}

single_alias[culture_modifier] = {
    ## push_scope = culture
    alias_name[modifier] = alias_match_left[modifier]
}

single_alias[province_modifier] = {
    ## push_scope = province
    alias_name[modifier] = alias_match_left[modifier]
}

single_alias[county_modifier] = {
    ## push_scope = landed_title
    alias_name[modifier] = alias_match_left[modifier]
}

single_alias[quick_trigger_block] = {
    ## cardinality = 0..1
	adult = bool 				# The target needs to be adult
	## cardinality = 0..1
    attracted_to_owner = bool	# The target needs to be attracted to owner
	## cardinality = 0..1
    owner_attracted = bool		# Owner needs to be attracted to the target
	## cardinality = 0..1
    prison = bool 				# Target must be in prison
}

single_alias[duration_block] = {
    ##cardinality = 0..1
    enum[duration] = alias_keys_field[int_value]
    ## cardinality = 0..1
    enum[duration] = int_value_field
    ##cardinality = 0..1
    enum[duration] = single_alias_right[score_formula]
    ##cardinality = 0..1
    enum[duration] = { int int }
}

single_alias[single_duration_block] = {
    ##cardinality = 0..1
    enum[duration] = alias_keys_field[int_value]
    ## cardinality = 0..1
    enum[duration] = int_value_field
    ##cardinality = 0..1
    enum[duration] = single_alias_right[score_formula]
}

#TODO: Remove?
alias[duration:enum[duration]] = alias_keys_field[int_value]
alias[duration:enum[duration]] = int_value_field
alias[duration:enum[duration]] = single_alias_right[score_formula]
alias[duration:enum[duration]] = { int int }

## scope = character
alias[modifier:ignore_negative_opinion_of_culture] = bool
## scope = character
alias[modifier:ignore_negative_culture_opinion] = bool
## scope = character
alias[modifier:ignore_different_faith_opinion] = bool
## scope = { character combat }
alias[modifier:no_water_crossing_penalty] = bool
## scope = character
alias[modifier:hide_effects] = bool
## scope = character
alias[modifier:stacking] = bool
## scope = character
alias[modifier:ignore_opinion_of_different_faith] = bool
### Applies the value of a modifier
alias[modifier:<modifier>] = float
# ### Applies the value of a modifier
# alias[modifier:<modifier>] = <script_value>
### Applies the value of a modifier
alias[modifier:<modifier>] = <static_value>

# TODO: Properly implement
single_alias[dna_modiifer] = {
    ## cardinality = 0..inf
    morph = {
        ## cardinality = 1..inf
        scalar = scalar
    }
    ## cardinality = 0..inf
    color = {
        ## cardinality = 1..inf
        scalar = scalar
    }
    ## cardinality = 0..inf
    accessory = {
        ## cardinality = 1..inf
        scalar = scalar
    }
}

single_alias[scaling_court_modifier] = {
    ## cardinality = 0..1
    terrible = single_alias_right[modifier_list]
    ## cardinality = 0..1
    poor = single_alias_right[modifier_list]
    ## cardinality = 0..1
    average = single_alias_right[modifier_list]
    ## cardinality = 0..1
    good = single_alias_right[modifier_list]
    ## cardinality = 0..1
    excellent = single_alias_right[modifier_list]
}

single_alias[scaling_court_modifier_desc] = {
    ## cardinality = 0..1
    terrible = localisation
    ## cardinality = 0..1
    poor = localisation
    ## cardinality = 0..1
    average = localisation
    ## cardinality = 0..1
    good = localisation
    ## cardinality = 0..1
    excellent = localisation
    range = localisation
}

alias[scheming_against_target:type] = <scheme>
alias[scheming_against_target:scheme_skill] = enum[attribute]

alias[trigger_event:id] = <event>
alias[trigger_event:on_action] = <on_action>

alias[entity_attribute:additive_animation] = enum[model_additive_animations]
alias[entity_attribute:blend_shape] = enum[model_blendshape]