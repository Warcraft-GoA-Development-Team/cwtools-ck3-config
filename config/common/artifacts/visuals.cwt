types = {
    type[artifact_visual] = {
        path = "common/artifacts/visuals"
    }
}

# Determines the visuals of an artifact and ties together 2d and 3d visuals
# Picks a random valid one based on the triggers, passes in the scopes from the creation/reforge like the text does

artifact_visual = {
	### optional field with no gameplay effect. Only needed for automatic test artifact generation
    ## cardinality = 0..1
	default_type = scalar
    ## cardinality = 0..1
    pedestal = enum[pedestal_type]
    ## cardinality = 0..1
    support_type = enum[support_type]
    ## cardinality = 0..inf
    icon = filepath[game/gfx/interface/icons/artifact]
    ## cardinality = 0..inf
	icon = {
        ## replace_scope = { root = character artifact = artifact }
		trigger = single_alias_right[trigger_clause]

		reference = filepath[game/gfx/interface/icons/artifact]
	}
    ## cardinality = 0..inf
    asset = <entity>
    ## cardinality = 0..inf
	asset = {
        ## replace_scope = { root = character artifact = artifact }
        ## cardinality = 0..inf
		trigger = single_alias_right[trigger_clause]
		reference = <entity>
	}
}

enums = {
    enum[pedestal_type] = {
        tall
        short
        tall_pillow
        short_pillow
        armorstand
    }
    enum[support_type] = {
        tall
        tall_pillow
        lectern
    }
}