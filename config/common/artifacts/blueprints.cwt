types = {
    type[blueprint] = {
        path = "game/common/artifacts/blueprints"
    }
}

enums = {
	enum[artifact_rarity] = {
		common
		masterwork
		famed
		illustrious
	}
}

blueprint = {

    ### artifact type, determines slot and category ( inventory/court )
	in_type = <artifact_type>
    ### artifact visual type, determines 3d assets, icons etc.
	in_visuals = <artifact_visual>

	### these out_ types determine the artifacts looks and usage post-reforge
	out_type = <artifact_type>
    ### these out_ types determine the artifacts looks and usage post-reforge
	out_visuals = <artifact_visual>

	### an array of modifier types that will not be allowed to persist on the artifact post-reforge
	## cardinality = 0..1
	disallowed_modifiers = {
        ## cardinality = 1..inf
		alias_keys_field[modifier]
	}

	### A nested array of static modifiers that will be used instead of any modifier containing the above disallowed modifiers post-reforge. The system will pick a number of random modifiers ( no duplicates ) from the corresponding rarity list
    ## cardinality = 0..1
	replacement_modifiers = {
        ## cardinality = 0..1
		common = {
            ## cardinality = 0..inf
			alias_keys_field[modifier]
            ## cardinality = 0..inf
			<modifier_container>
		}
        ## cardinality = 0..1
		masterwork = {
			## cardinality = 0..inf
			alias_keys_field[modifier]
			## cardinality = 0..inf
			<modifier_container>
		}
        ## cardinality = 0..1
		famed = {
			## cardinality = 0..inf
			alias_keys_field[modifier]
			## cardinality = 0..inf
			<modifier_container>
		}
        ## cardinality = 0..1
		illustrious = {
			## cardinality = 0..inf
			alias_keys_field[modifier]
			## cardinality = 0..inf
			<modifier_container>
		}
	}

	### changes the template of the artifact to the specified scripted template. Templates are specified in artifacts/templates/
	## cardinality = 0..1
	template = scalar # TODO
}
