types = {
    type[activity_locale] = {
        path = "common/activities/activity_locales"
        localisation = {
            name = $
            desc = $_desc
        }
    }
}


activity_locale = {

	### Brief: is_available ( trigger ) Trigger to check if this locale type is valid for the activity.
    ## push_scope = { root = character activity = activity host = character }
	## cardinality = 0..1
	is_available = single_alias_right[trigger_clause]

	### Brief: chance ( scripted value int32 ) How likely is this locale to be picked to fill a locale slot? Will be picked by weighted random.
    ## push_scope = { root = character activity = activity host = character }
	chance = single_alias_right[score_formula]
	
	### Effect firing to execute event in the locale
    ## push_scope = { root = character activity = activity host = character }
	## cardinality = 0..1
	on_enter_locale = single_alias_right[effect_clause]

	### How likely is the AI to pick to visit this locale? Will be picked by weighted random.
    ## push_scope = { root = character activity = activity host = character }
	ai_will_do = single_alias_right[score_formula]

	### How many days is the locale invalid to be 'entered', after it has been entered.
    ## push_scope = { root = character activity = activity host = character }
	cooldown = {
        enum[duration] = alias_keys_field[int_value]
        enum[duration] = value_field
    }

	### Brief: visuals ( triggered reference block ) Visual widgets for the locale, multiple can be read in, first one is  picked from order they are read in. Reference is a file name (and top level widget name) in gui/activity_locale_widgets
	## cardinality = 0..inf
	visuals = {
		# root = the activity
		# scope:activity = the activity
		# scope:host = host of the activity
        ## push_scope = { root = activity activity = activity host = character }
		trigger = single_alias_right[trigger_clause]
		reference = filepath[game/gui/activity_locale_widgets/,.gui]
	}
	## cardinality = 0..inf
	visuals = filepath[game/gui/activity_locale_widgets/,.gui]
}

