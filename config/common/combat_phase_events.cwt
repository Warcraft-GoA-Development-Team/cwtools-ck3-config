types = {
    type[combat_phase_event] = {
        path = "common/combat_phase_events"
    }
}

enums = {
	enum[combat_phase_event_type] = {
		commander
		knight
	}
}


combat_phase_event = {
	type = enum[combat_phase_event_type] # Is this run on the commander or on all the knights

	# root is the character
	# scope:combat_side is the side of combat the character is on

	### Is this a valid combat event for the character
    ## replace_scope = { root = character combat_side = combat_side }
	## cardinality = 0..1
	is_valid = {

	}

	### Chance this event gets used weighted against all other valid events
	## replace_scope = { root = character combat_side = combat_side }
    chance = single_alias_right[weight_block]

	### Effect if this combat phase event is used
	### Note: If the effect is empty, such as for a "none" event, then we internally skip queing it (or any other event) when it gets "picked" to save on performance
	### This has no consequences script wise since it was already empty, but means that adding to the "none" event to actually do something is not advised
	### If you need something run for all combats then consider if its better suited to running in the combat victory/defeat on actions instead of the phase pulse event
    ## replace_scope = { root = character combat_side = combat_side }
	## cardinality = 0..1
	effect = single_alias_right[effect_clause]
}