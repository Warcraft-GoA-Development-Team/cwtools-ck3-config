types = {
    type[diarchy_mandate] = {
        path = "common/diarchies/diarchy_mandates"
    }

    type[diarchy] = {
        path = "common/diarchies/diarchy_types"
    }
}

diarchy_mandate = {
	### Scripted value describing how good is diarch at handling this mandate type
    ## replace_scope = { root = character }
	qualification_score = single_alias_right[int_conditional_formula]

	### Scripted value describing how likely is this mandate to be picked by liege
	## replace_scope = { root = character }
	ai_score = single_alias_right[int_conditional_formula]
}


diarchy = {
	### trigger has to be true when diarchy starts
	start = single_alias_right[trigger_clause]

	### diarchy ends when trigger is true. Empty trigger means diarchy ends only via script
	end = single_alias_right[trigger_clause]

	### if diarchy type uses diarch succession mechanic
    ## cardinality = 0..1
	succession = bool

	### Scripted value describing how much current candidate is preferred
	## replace_scope = { root = character }
	candidate_score = single_alias_right[int_conditional_formula]

	### Scripted value describing how good is the diarch overall qualifications for individual mandates can be used here. Please avoid circular dependencies and don't use aptitude for mandate qualifications
	aptitude_score = single_alias_right[int_conditional_formula]

	### Sctipted value describing loyalty of the diarch
	loyalty_score = single_alias_right[int_conditional_formula]

	### diarchy type allows seletion of one active mandate out of several available ones
    ## cardinality = 0..inf
	mandate = <diarchy_mandate>

	### Diarchy can have multiple power levels that unlock diarch powers
	## cardinality = 0..inf
    power_level = {

		### Required scales of power swing value to activate the option
        swing = int_value_field

		### Parameter name - dynamic token. Use together with triggers to check if active diarchy has certain parameter enabled. can have several parameters on the same power level
		## cardinality = 0..inf
        parameter = value_set[diarchy_parameter]

		## cardinality = 0..inf
        hidden_parameter = value_set[diarchy_parameter]
	}

	### scales of power swing trends towards this scripted value by DIARCHY_MONTHLY_POWER_CHANGE every month
    ## cardinality = 0..1
	swing_balance = single_alias_right[int_conditional_formula]

	### character interaction is used to end this type of diarchy and accessible via diarchy window
    ## cardinality = 0..1
	end_interation = <character_interaction>

	### Modifier applied to the liege of the character in this position. Can take a "scale" parameter to scale by (a script value; see _script_values.info)
    ## cardinality = 0..1
	liege_modifier = {
        ## cardinality = 0..1
        scale = single_alias_right[int_conditional_formula]
        ## cardinality = 1..inf
        alias_name[modifier] = alias_match_left[modifier]
    }

	### Modifier applied to the active diarch. Can take a "scale" parameter to scale by (a script value; see _script_values.info)
    ## cardinality = 0..1
	diarch_modifier = {
        ## cardinality = 0..1
        scale = single_alias_right[int_conditional_formula]
        ## cardinality = 1..inf
        alias_name[modifier] = alias_match_left[modifier]
    }
}
