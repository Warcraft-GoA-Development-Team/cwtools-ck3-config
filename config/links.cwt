links = {
    house_head = {
        desc = " Get house head of the scoped character"
        input_scopes = dynasty_house
        output_scope = character
    }
    capital_vassal = {
        desc = " Get capital vassal title of scoped title"
        input_scopes = landed_title
        output_scope = landed_title
    }
    controlled_faith = {
        desc = " Unknown, add something in code registration"
        input_scopes = landed_title
        output_scope = faith
    }
    current_heir = {
        desc = " Get current heir to scoped title"
        input_scopes = landed_title
        output_scope = character
    }
    de_facto_liege = {
        desc = " Get de facto liege title of scoped title"
        input_scopes = landed_title
        output_scope = landed_title
    }
    de_jure_liege = {
        desc = " Get de jure liege title of scoped title"
        input_scopes = landed_title
        output_scope = landed_title
    }
    holder = {
        desc = " Get holder of scoped title"
        input_scopes = landed_title
        output_scope = character
    }
    lessee = {
        desc = " Get current lessee of scoped title"
        input_scopes = landed_title
        output_scope = character
    }
    lessee_title = {
        desc = " Get lessee title of scoped landed title"
        input_scopes = landed_title
        output_scope = landed_title
    }
    previous_holder = {
        desc = " Get previous holder of scoped landed title"
        input_scopes = landed_title
        output_scope = character
    }
    title_capital_county = {
        desc = " Get preferred capital county of scoped title"
        input_scopes = landed_title
        output_scope = landed_title
    }
    title_province = {
        desc = " Get province of scoped landed title"
        input_scopes = landed_title
        output_scope = province
    }
    culture_head = {
        desc = " Get culture of scoped character, province or title"
        input_scopes = culture
        output_scope = character
    }
    betrothed = {
        desc = " Get the betrothed of the scoped character"
        input_scopes = character
        output_scope = character
    }
    capital_barony = {
        desc = " Get capital barony title ( realm capital ) of scoped character"
        input_scopes = character
        output_scope = landed_title
    }
    capital_county = {
        desc = " Get de jure liege title of the capital county ( realm capital ) of the scoped character"
        input_scopes = character
        output_scope = landed_title
    }
    capital_province = {
        desc = " Get capital province of scoped character"
        input_scopes = character
        output_scope = province
    }
    commanding_army = {
        desc = " Get commanding army of scoped character"
        input_scopes = character
        output_scope = army
    }
    concubinist = {
        desc = " Get concubinist of the scoped character"
        input_scopes = character
        output_scope = character
    }
    council_task = {
        input_scopes = character
        output_scope = council_task
    }
    councillor = {
        desc = " Scope to the councillor in a council task"
        input_scopes = council_task
        output_scope = character
    }
    councillor_task_target = {
        desc = " Scope to the active task target of the scoped councillor"
        input_scopes = character
    }
    court_owner = {
        desc = " Get the court owner of the scoped character"
        input_scopes = character
        output_scope = character
    }
    council_position = {
        desc = " Scope to the councillor of the given type, ex. scope:cp_steward"
        from_data = yes
        type = scope
        prefix = cp:
        data_source = <council_position>
        input_scopes = character
        output_scope = character
    }
    court_position = {
        desc = " The character currently employed in a specific court position."
        input_scopes = character
        output_scopes = character
    }
    court_amenity_category = {
        desc = " Unknown, add something in code registration"
        data_source = <court_amenity_category>
        input_scopes = character
        output_scopes = court_amenity_category
    }
    designated_heir = {
        desc = " Get designated heir of scoped character"
        input_scopes = character
        output_scope = character
    }
    dynasty = {
        desc = " Get dynasty of scoped character"
        input_scopes = character
        output_scope = dynasty
    }
    employer = {
        desc = " Get employer of scoped character"
        input_scopes = character
        output_scope = character
    }
    employee = {
        desc = " Unknown, add something in code registration"
        input_scopes = character
        output_scope = character
    }
    father = {
        desc = " Get father of the scoped character"
        input_scopes = character
        output_scope = character
    }
    ghw_beneficiary = {
        desc = " Get great holy war beneficiary of scoped character"
        input_scopes = character
        output_scope = character
    }
    host = {
        desc = " Get current host of the scoped character"
        input_scopes = character
        output_scope = character
    }
    house = {
        desc = " Get house of the scoped character"
        input_scopes = character
        output_scope = dynasty_house
    }
    imprisoner = {
        desc = " Get imprisoner of scoped character"
        input_scopes = character
        output_scope = character
    }
    joined_faction = {
        desc = " Get joined faction of scoped character"
        input_scopes = character
        output_scope = faction
    }
    killer = {
        desc = " Get the scoped characters killer"
        input_scopes = character
        output_scope = character
    }
    knight_army = {
        desc = " Get knight army of scoped character"
        input_scopes = character
        output_scope = army
    }
    liege = {
        desc = " Get the liege of the scoped character"
        input_scopes = character
        output_scope = character
    }
    liege_or_court_owner = {
        desc = " Get the liege of the scoped character, if non then get court owner"
        input_scopes = character
        output_scope = character
    }
    matchmaker = {
        desc = " Get matchmaker of the scoped character"
        input_scopes = character
        output_scope = character
    }
    mother = {
        desc = " Get mother of the scoped character"
        input_scopes = character
        output_scope = character
    }
    player_heir = {
        desc = " Get player heir of scoped character"
        input_scopes = character
        output_scope = character
    }
    pregnancy_assumed_father = {
        desc = " Get the assumed father of the scoped characters unborn baby"
        input_scopes = character
        output_scope = character
    }
    pregnancy_real_father = {
        desc = " Get the real father of the scoped characters unborn baby"
        input_scopes = character
        output_scope = character
    }
    primary_heir = {
        desc = " Get primary heir of scoped character"
        input_scopes = character
        output_scope = character
    }
    primary_partner = {
        desc = " Get the primary partner ( consort ) of the scoped character"
        input_scopes = character
        output_scope = character
    }
    primary_spouse = {
        desc = " Get the primary spouse of the scoped character"
        input_scopes = character
        output_scope = character
    }
    primary_title = {
        desc = " Get primary title of scoped character"
        input_scopes = character
        output_scope = landed_title
    }
    real_father = {
        desc = " Get the real father of the scoped character"
        input_scopes = character
        output_scope = character
    }
    realm_priest = {
        desc = " Get realm priest of scoped character"
        input_scopes = character
        output_scope = character
    }
    top_liege = {
        desc = " Get the top liege of the scoped character"
        input_scopes = character
        output_scope = character
    }
    vassal_contract_obligation_level = {
        desc = " The level of the provided contract type in the scoped objects current vassal contract"
        input_scopes = character
        output_scope = value
    }
    culture_group = {
        desc = " Unknown, add something in code registration"
        input_scopes = { character landed_title province culture }
        output_scope = culture_group
    }
    great_holy_war = {
        desc = " Get great holy war of scoped faith"
        input_scopes = faith
        output_scope = great_holy_war
    }
    religious_head = {
        desc = " Get religious head of scoped faith"
        input_scopes = faith
        output_scope = character
    }
    religious_head_title = {
        desc = " Get landed title belonging to the religious head of the scoped faith"
        input_scopes = faith
        output_scope = landed_title
    }
    secret_owner = {
        desc = " Get owner of scoped secret"
        input_scopes = secret
        output_scope = character
    }
    secret_target = {
        desc = " Get target character of scoped secret"
        input_scopes = secret
        output_scope = character

    }
    province_owner = {
        desc = " Get province owner of scoped province"
        input_scopes = province
        output_scope = character
    }
    culture = {
        desc = " Get culture of scoped character, province or title"
        input_scopes = { character landed_title province }
        output_scope = culture
    }
    holy_order_patron = {
        desc = " Get patron of scoped holy order"
        input_scopes = holy_order
        output_scope = character
    }
    leader = {
        desc = " Get leader of scoped holy order"
        input_scopes = holy_order
        output_scope = character
    }
    title = {
        desc = " Get landed title of scoped holy order"
        input_scopes = holy_order
        output_scope = landed_title
    }
    army_commander = {
        desc = " Get commander of scoped army"
        input_scopes = army
        output_scope = character
    }
    army_owner = {
        desc = " Get owner of scoped army"
        input_scopes = army
        output_scope = character
    }
    blue = {
        desc = " The blue value of a color"
        input_scopes = color
        output_scope = value
    }
    brightness = {
        desc = " The brightness value of a color"
        input_scopes = color
        output_scope = value
    }
    green = {
        desc = " The green value of a color"
        input_scopes = color
        output_scope = value
    }
    hue = {
        desc = " The hue value of a color"
        input_scopes = color
        output_scope = value
    }
    red = {
        desc = " The red value of a color"
        input_scopes = color
        output_scope = value
    }
    saturation = {
        desc = " The saturation value of a color"
        input_scopes = color
        output_scope = value
    }
    combat = {
        desc = " Get combat of scoped combat side"
        input_scopes = combat_side
        output_scope = combat
    }
    enemy_side = {
        desc = " Get enemy ( opposite ) combat side of scoped side"
        input_scopes = combat_side
        output_scope = combat_side
    }
    side_commander = {
        desc = " Get commander of scoped combat side"
        input_scopes = combat_side
        output_scope = character
    }
    side_primary_participant = {
        desc = " Get primary participant of scoped combat side"
        input_scopes = combat_side
        output_scope = character
    }
    ghw_designated_winner = {
        desc = " Get designated winner of scoped great holy war"
        input_scopes = great_holy_war
        output_scope = character
    }
    ghw_target_character = {
        desc = " Get target character of scoped great holy war"
        input_scopes = great_holy_war
        output_scope = character
    }
    ghw_target_title = {
        desc = " Get target landed title of scoped great holy war"
        input_scopes = great_holy_war
        output_scope = landed_title
    }
    ghw_title_recipient = {
        desc = " Get the title recipient of scoped great holy war"
        input_scopes = great_holy_war
        output_scope = character
    }
    ghw_war = {
        desc = " Get the title recipient of scoped great holy war"
        input_scopes = great_holy_war
        output_scope = war
    }
    ghw_war_declarer = {
        desc = " Get declarer of scoped great holy war"
        input_scopes = great_holy_war
        output_scope = character
    }
    dynast = {
        desc = " Get dynasty head ( dynast ) of scoped character"
        input_scopes = dynasty
        output_scope = character
    }
    scheme_defender = {
        desc = " Get defender of scoped scheme"
        input_scopes = scheme
        output_scope = character
    }
    scheme_owner = {
        desc = " Get owner of scoped scheme"
        input_scopes = scheme
        output_scope = character
    }
    claimant = {
        desc = " Get claimant of scoped casus belli or war"
        input_scopes = { war casus_belli }
        output_scope = character
    }
    primary_attacker = {
        desc = " Get primary attacker of scoped casus belli or war"
        input_scopes = { war casus_belli }
        output_scope = character
    }
    primary_defender = {
        desc = " Get primary defender of scoped casus belli or war"
        input_scopes = { war casus_belli }
        output_scope = character
    }
    combat_attacker = {
        desc = " Get attacker side of scoped combat"
        input_scopes = combat
        output_scope = combat_side
    }
    combat_defender = {
        desc = " Get defender side of scoped combat"
        input_scopes = combat
        output_scope = combat_side
    }
    combat_war = {
        desc = " Get war of scoped combat"
        input_scopes = combat
        output_scope = war
    }
    location = {
        desc = " Get province of scoped army, character or combat"
        input_scopes = { character combat army }
        output_scope = province
    }
    faith = {
        desc = " Get faith of scoped character, province, title or great holy war"
        input_scopes = { character landed_title province great_holy_war }
        output_scope = faith
    }
    story_owner = {
        desc = " Get owner of scoped story"
        input_scopes = story_cycle
        output_scope = character
    }
    faction_leader = {
        desc = " Get leader of scoped faction"
        input_scopes = faction
        output_scope = character
    }
    faction_target = {
        desc = " Get target character of scoped faction"
        input_scopes = faction
        output_scope = character
    }
    faction_war = {
        desc = " Get war of scoped faction"
        input_scopes = faction
        output_scope = war
    }
    special_character = {
        desc = " Get special character of scoped faction"
        input_scopes = faction
        output_scope = character
    }
    special_title = {
        desc = " Get special landed title of scoped faction"
        input_scopes = faction
        output_scope = landed_title
    }
    religion = {
        desc = " Get religion of scoped faith, character, province, title or great holy war"
        input_scopes = { character landed_title province faith great_holy_war }
        output_scope = religion
    }
    casus_belli = {
        desc = " Get casus belli of scoped war"
        input_scopes = war
        output_scope = casus_belli
    }
    activity_owner = {
        desc = " Unknown, add something in code registration"
        input_scopes = activity
        output_scope = character
    }
    activity_province = {
        desc = " Unknown, add something in code registration"
        input_scopes = activity
        output_scope = province
    }
    war = {
        desc = " Get war of scoped casus belli"
        input_scopes = casus_belli
        output_scope = war
    }
    barony = {
        desc = " Get de jure barony title of scoped title or province"
        input_scopes = { landed_title province }
        output_scope = landed_title
    }
    barony_controller = {
        desc = " Get barony controller of scoped province or barony title"
        input_scopes = { landed_title province }
        output_scope = character
    }
    county = {
        desc = " Get de jure county title of scoped title or province"
        input_scopes = { landed_title province }
        output_scope = landed_title
    }
    county_controller = {
        desc = " Get county controller of scoped province or barony/county title"
        input_scopes = { landed_title province }
        output_scope = character
    }
    duchy = {
        desc = " Get de jure duchy title of scoped title or province"
        input_scopes = { landed_title province }
        output_scope = landed_title
    }
    empire = {
        desc = " Get de jure empire title of scoped title or province"
        input_scopes = { landed_title province }
        output_scope = landed_title
    }
    kingdom = {
        desc = " Get de jure kingdom title of scoped title or province"
        input_scopes = { landed_title province }
        output_scope = landed_title
    }
    array_define = {
        desc = " Reference the value of a numeric value in an array define: array_define:Namespace|Name|Index. Index is 0-based."
        from_data = yes
        data_source = <array_define>
        prefix = array_define:
        output_scope = value
    }
    character = {
        desc = " Global link to historical ( scripted ) character scope of the given character string"
        from_data = yes
        type = scope
        data_source = <character>
        prefix = character:
        output_scope = character
    }
    base_value = {
        desc = " Unknown, add something in code registration"
        output_scope = value
    }
    compare_value = {
        desc = " A comparison trigger that will return its value in the context it is used eg: root.gold"
        output_scope = value
    }
    culture = {
        from_data = yes
        type = scope
        data_source = <culture>
        prefix = culture:
        output_scope = culture
    }
    culture_group = {
        desc = " Unknown, add something in code registration"
        from_data = yes
        type = scope
        data_source = <culture_group>
        prefix = culture_group:
        output_scope = culture_group
    }
    custom = {
        desc = " Adds custom text between scope changes"
    }
    define = {
        desc = " Reference the value of a numeric define: define:Namespace|Name"
        from_data = yes
        type = scope
        data_source = <define>
        prefix = define:
        output_scope = value
    }
    dummy_female = {
        desc = " Global link to the dummy female character"
        output_scope = character
    }
    dummy_male = {
        desc = " Global link to the dummy male character"
        output_scope = character
    }
    dynasty = {
        desc = " Link to dynasty scope of the given dynasty string"
        from_data = yes
        type = scope
        data_source = <dynasty>
        prefix = dynasty:
        output_scope = dynasty
    }
    faith = {
        desc = " Global link to faith scope of given faith string"
        from_data = yes
        type = scope
        data_source = <faith>
        prefix = faith:
        output_scope = faith
    }
    flag = {
        desc = " Flag literals eg: flag:the_boss"
        from_data = yes
        data_source = value[flag]
        prefix = flag:
        output_scope = flag
    }
    global_var = {
        desc = " Reference a previous set global variable via its name eg: global_var:important_thing"
        from_data = yes
        type = both
        data_source = value[global_variable]
        prefix = global_var:
    }
    house = {
        desc = " Link to house scope of the given house string"
        output_scope = dynasty_house
        prefix = house:
    }
    local_var = {
        desc = " Reference a previous set local variable via its name eg: local_var:person_of_interest"
        from_data = yes
        type = both
        data_source = value[local_variable]
        prefix = local_var:
    }
    named_script_value = {
        desc = " A script value that will calculate and returns its value in the context it is used"
        output_scope = value
    }
    province = {
        desc = " Directly scope to a specific province by its ID"
        from_data = yes
        data_source = <province>
        prefix = province:
        output_scope = province
    }
    religion = {
        desc = " Unknown, add something in code registration"
        from_data = yes
        type = scope
        data_source = <religion>
        prefix = religion:
        output_scope = religion
    }
    scope = {
        desc = " Reference a previously saved scope via its name eg: scope:target"
        from_data = yes
        data_source = value[event_target]
        prefix = scope:
    }
    title = {
        desc = " Global link to title scope of given landed title template string"
        from_data = yes
        type = scope
        data_source = <landed_title>
        prefix = title:
        output_scope = landed_title
    }
    var = {
        desc = " Reference a previous set variable via its name eg: var:mortal_enemy"
        from_data = yes
        type = both
        prefix = var:
        data_source = value[variable]
    }
    inspiration = {
        desc = " Get the current inspiration of the scoped character, may not exist if they have no inspiration"
        input_scopes = character
        output_scope = inspiration
    }
    inspiration_sponsor = {
        desc = " Get the character who is sponsoring the inspiration, may not exist if there is no sponsor yet"
        input_scopes = inspiration
        output_scope = character
    }
}
