types = {
    ## graph_related_types = { on_action story_cycle }
	type[event] = {
        path = "game/events"
        localisation = {
			## primary
			title = title
		}

        subtype[hidden] = {
            ## cardinality = 1..1
            hidden = yes
        }

        subtype[court] = {
            ## cardinality = 1..1
            type = court_event
        }

        ## push_scope = character
        ## display_name = Character event
		## abbreviation = CE
        subtype[character] = {
            ## cardinality = 0..0
            scope = scalar
        }

        ## push_scope = faith
        subtype[faith] = {
            ## cardinality = 1..1
            scope = faith
        }

	}
}
enums = {
    enum[event_types] = {
        character_event
        letter_event
        activity_event
        court_event
    }
}

event = {
    ## cardinality = 0..1
    type = enum[event_types]

    ## cardinality = 0..1
    content_source = <dlc>

    ## cardinality = 0..1
    scope = enum[scope_type_token]

    ## cardinality = 0..1
    hidden = bool

    ## cardinality = 0..1
    orphan = bool

    ## cardinality = 0..1
    sender = scope[character]

    ## cardinality = 0..1
    opening = {
        desc = localisation
        desc = single_alias_right[complex_desc]
    }

    ## cardinality = 0..1
    cooldown = single_alias_right[duration_block]

    subtype[!hidden] = {
        title = localisation
        title = single_alias_right[complex_desc]
        ## cardinality = 0..1
        picture = <event_picture>
        desc = localisation
        desc = single_alias_right[complex_desc]
    }
    subtype[hidden] = {
        # So that things don't yell at you if you make an event hidden for a lil while
        ## cardinality = 0..1
        title = localisation
        ## cardinality = 0..1
        picture = <event_picture>
        ## cardinality = 0..1
        desc = localisation
        ## cardinality = 0..1
        desc = single_alias_right[complex_desc]
    }

    subtype[court] = {
        ### Here, we define how the event appears inside the court view.
        ### This block exists in the root scope, so you can just define anyone you'd normally have access to/set up in the immediate block here.
        court_scene = {
            ### Define which character will have the button for starting the event appear over the top of 'em.
            button_position_character = scope[character]
            ### Forcibly open the event next.
            court_event_force_open = bool
            show_timeout_info = bool
            should_pause_time = bool

            roles = {
                scope[character] = {
                    group = <character_group>
                    animation = <animation>
                }
            }
        }
    }

    ## cardinality = 0..inf
    immediate = single_alias_right[effect_clause]

    ## cardinality = 0..1
    on_trigger_fail = single_alias_right[effect_clause]

    ## cardinality = 0..inf
    trigger = single_alias_right[trigger_clause]

    ## cardinality = 0..1
    window = scalar
    ## cardinality = 0..1
    widget = {
        gui = scalar
        container = scalar
        controller = scalar
    }

    ## cardinality = 0..inf
    option = {
        ## cardinality = 0..inf
        name = localisation
        ## cardinality = 0..inf
        name = single_alias_right[complex_desc]
        ## cardinality = 0..inf
        name = {
            trigger = single_alias_right[trigger_clause]
            text = localisation
        }
        ## cardinality = 0..1
        flavor = single_alias_right[complex_desc]
        ## cardinality = 0..1
        flavor = localisation

        ## cardinality = 0..1
        add_internal_flag = enum[event_option_flag]

        ## cardinality = 0..1
        highlight = bool

        ## cardinality = 0..1
        ### Defaults to no.
        exclusive = bool

        ## cardinality = 0..inf
        alias_name[effect] = alias_match_left[effect]

        ## cardinality = 0..1
        trigger = single_alias_right[trigger_clause]

        ## cardinality = 0..1
        ai_chance = single_alias_right[chance_block]

        ## cardinality = 0..1
        skill = enum[attribute]

        ## cardinality = 0..inf
        trait = <trait>
        ## cardinality = 0..inf
        trait = enum[trait_group]

        ## cardinality = 0..1
        highlight_portrait = scope[character]
        ## cardinality = 0..1
        fallback = bool
    }
    ## cardinality = 0..inf
    after = single_alias_right[effect_clause]

    ## cardinality = 0..1
    weight_multiplier = single_alias_right[weight_block]

    ## cardinality = 0..1
    left_portrait = scope[character]
    ## cardinality = 0..1
    left_portrait = single_alias_right[event_portrait]
    ## cardinality = 0..1
    right_portrait = scope[character]
    ## cardinality = 0..1
    right_portrait = single_alias_right[event_portrait]
    ## cardinality = 0..1
    center_portrait = scope[character]
    ## cardinality = 0..1
    center_portrait = single_alias_right[event_portrait]
    ## cardinality = 0..1
    lower_left_portrait = scope[character]
    ## cardinality = 0..1
    lower_left_portrait = single_alias_right[event_portrait]
    ## cardinality = 0..1
    lower_center_portrait = scope[character]
    ## cardinality = 0..1
    lower_center_portrait = single_alias_right[event_portrait]
    ## cardinality = 0..1
    lower_right_portrait = scope[character]
    ## cardinality = 0..1
    lower_right_portrait = single_alias_right[event_portrait]

    ## cardinality = 0..1
    artifact = {
        target = scope[artifact]
        position = enum[event_portrait_position]
    }

    ## cardinality = 0..1
    theme = <event_theme>
    ## cardinality = 0..inf
    override_background = {
        ## cardinality = 0..1
        trigger = single_alias_right[trigger_clause]
        ## cardinality = 0..1
        reference = <event_background>
    }
    ## cardinality = 0..inf
    override_icon = {
        ## cardinality = 0..1
        trigger = single_alias_right[trigger_clause]
        reference = filepath
    }
    ## cardinality = 0..inf
    override_environment = {
        ## cardinality = 0..1
        trigger = single_alias_right[trigger_clause]
        reference = <portrait_environment>
    }
    ## cardinality = 0..inf
    override_sound = { reference = scalar }

}

single_alias[event_portrait] = {
    character = scope[character]
    ## cardinality = 0..1
    animation = alias_keys_field[animation]
    ## cardinality = 0..1
    outfit_tags = {
        ## cardinality = 0..1
        value[outfit_tag]
    }
    ## cardinality = 0..inf
    triggered_animation = {
        trigger = single_alias_right[trigger_clause]
        animation = alias_keys_field[animation]
    }
    animation = <animation>
    ## cardinality = 0..1
    trigger = single_alias_right[trigger_clause]
}

enums = {
    enum[event_portrait_position] = {
        left_portrait
        right_portrait
        center_portrait
        lower_left_portrait
        lower_center_portrait
        lower_right_portrait
    }

    enum[event_option_flag] = {
        dangerous
        special
    }
}
